
Q2:

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE TinyExpedia [
<!ELEMENT TinyExpedia (customer*, airline*, order*)>
<!ELEMENT customer ( address+)>
<!ATTLIST customer Order_Number IDREFS #REQUIRED
                   Passport_Number ID #REQUIRED
                   Legal_Name CDATA #REQUIRED
                   DOB CDATA #REQUIRED>
<!ELEMENT address (street,city,state,zipcode)>
<!ELEMENT street (#PCDATA)>
<!ELEMENT city (#PCDATA)>
<!ELEMENT state (#PCDATA)>
<!ELEMENT zipcode (#PCDATA)>
<!ELEMENT airline EMPTY>

<!ATTLIST airline Airline_Code ID #REQUIRED
                  Airline_Name CDATA #REQUIRED>
<!ELEMENT order (flightNum+)>
<!ATTLIST order Order_Number ID #REQUIRED
                     Airline_Code IDREF #REQUIRED
                     Payment_Method (creditCard|check|debitCard) #REQUIRED>
<!ELEMENT flightNum (#PCDATA)>
]>
<TinyExpedia>
    <customer  Order_Number = "4785993"  Passport_Number="P256443" Legal_Name="Eric Wang" DOB="09/01/1995">
        <address>
            <street> 1 Callodine Ave</street>
            <city> Buffalo</city>
            <state> New York </state>
            <zipcode> 14226 </zipcode>
        </address>
    </customer>
    <airline Airline_Code="A2562" Airline_Name="China Southern"></airline>
    <order Order_Number ="4785993" Airline_Code="A2562" Payment_Method="debitCard">
        <flightNum>CH01</flightNum>
    </order>
</TinyExpedia>


Q3: 


3.1 

for $x in (“db/buildings.xml”)/buildings/building
where $x/type="library"
return $x


3.2
let $b:=doc(“db/buildings.xml”)/buildings
let $x:=(for $m in $b/building
         where $m/department="CSE"
         return $m)

let $y:=(for $n in $b/building
         where $n/department="EE"
         return $n)

    for $dp in $x, $dpr in $y
    where $dp/@id/string()=$dpr/@id/string()
    return $dp

3.3

   let $b:=doc(“db/buildings.xml”)/buildings
        let $x:= (for $b in $b/building
        	  where $b/year="1900"
                  return $b
                 )
        let $y :=<Buildings>{$x}</Buildings>
        for $b in $y/building
        let $z := $b/department
        order by $z
        return element building {
        element department { $z/text() },
        element numberOfBuilding { count($b) }
    }
